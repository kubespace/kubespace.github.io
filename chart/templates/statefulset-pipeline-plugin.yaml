apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kubespace.fullname" . }}-pipeline-plugin
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubespace.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.pipeline_plugin.replicaCount }}
  serviceName: {{ include "kubespace.fullname" . }}-pipeline-plugin
  selector:
    matchLabels:
      kubespace-app: kubespace-pipeline-plugin
      {{- include "kubespace.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.pipeline_plugin.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        kubespace-app: kubespace-pipeline-plugin
        {{- include "kubespace.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.pipeline_plugin.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.pipeline_plugin.securityContext | nindent 12 }}
          image: "{{ .Values.pipeline_plugin.image.repository }}:{{ .Values.pipeline_plugin.image.tag }}"
          imagePullPolicy: {{ .Values.pipeline_plugin.image.pullPolicy }}
          {{- if .Values.pipeline_plugin.extraArgs }}
          args:
{{ toYaml .Values.pipeline_plugin.extraArgs | indent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: MYSQL_HOST
              value: "{{ include "kubespace.fullname" . }}-mysql"
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.auth.rootPassword }}
            - name: MYSQL_DBNAME
              value: {{ .Values.mysql.auth.database }}
            - name: CALLBACK_ENDPOINT
              value: "http://{{ include "kubespace.fullname" . }}:{{ .Values.kubespace.service.port }}"
          {{- if .Values.pipeline_plugin.extraEnvs }}
{{ toYaml .Values.pipeline_plugin.extraEnvs | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: pipeline-data
            - name: data
              mountPath: /var/lib/containers/storage
              subPath: podman
          {{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
          {{- end }}
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.pipeline_plugin.resources | nindent 12 }}
      {{- with .Values.pipeline_plugin.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pipeline_plugin.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pipeline_plugin.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
      {{- end }}
  {{- if not .Values.pipeline_plugin.persistence.enabled }}
        - name: data
          hostPath:
            path: {{ .Values.pipeline_plugin.persistence.hostPath }}
            type: DirectoryOrCreate
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/component: kubespace-pipeline-plugin
        {{- if .Values.pipeline_plugin.persistence.annotations }}
        annotations: {{- toYaml .Values.pipeline_plugin.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.pipeline_plugin.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.pipeline_plugin.persistence.size | quote }}
        storageClassName: {{ .Values.pipeline_plugin.persistence.storageClass }}
  {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "kubespace.fullname" . }}-pipeline-plugin
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubespace.labels" . | nindent 4 }}
spec:
  type: {{ .Values.pipeline_plugin.service.type }}
  ports:
    - port: {{ .Values.pipeline_plugin.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    kubespace-app: kubespace-pipeline-plugin
    {{- include "kubespace.selectorLabels" . | nindent 4 }}